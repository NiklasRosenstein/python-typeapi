[build-system]
# NOTE(NiklasRosenstein): We pin this version so we can keep using the old way that Slap supports installing
#                         the "docs" extra without Poetry complaining about invalid format of the requirements.
requires = ["poetry-core==1.1.0a6"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "typeapi"
version = "1.4.3"
description = ""
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
readme = "readme.md"
packages = [{ include = "typeapi", from = "src" }]
classifiers = []
keywords = []

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/NiklasRosenstein/python-typeapi/issues"
Documentation = "https://niklasrosenstein.github.io/python-typeapi/"
Homepage = "https://github.com/NiklasRosenstein/python-typeapi"
# Repository = ""

[tool.poetry.dependencies]
python = "^3.6.3"
typing-extensions = ">=3.0.0"

[tool.poetry.dev-dependencies]
mypy = "*"
pytest = "*"
types-dataclasses = "^0.6.5"
isort = "^5.10.1"
flake8 = "^4.0.1"
black = "^22.3.0"

[tool.poetry.extras]
docs = ["novella==0.1.12", "pydoc-markdown==4.6.3", "mkdocs", "mkdocs-material"]

# For newer Poetry Core versions only. We need to stick with the old way that Poetry doesn't complain
#   about in older versions but work with Slap above.
#
# [tool.poetry.group.docs]
# optional = true
#
# [tool.poetry.group.docs.dependencies]
# mkdocs = "*"
# mkdocs-material = "*"
# novella = "0.2.3"
# pydoc-markdown = "4.6.0"

[tool.slap]
typed = true

[tool.slap.test]
check = "slap check"
mypy = "dmypy run src/"
pytest = "pytest src/ -vv"
black = "black --check src/"
isort = "isort --check-only src/"
flake8 = "flake8 src/"

[tool.slap.run]
"docs:build" = "cd docs && novella --base-url python-typeapi/"
"docs:dev" = "cd docs && novella --serve"
fmt = "black src/ && isort src/"

[tool.mypy]
python_version = "3.7"
explicit_package_bases = true
mypy_path = ["src"]
namespace_packages = true
pretty = true
show_error_codes = true
show_error_context = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = false

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true

[tool.black]
line-length = 120
