[[entries]]
id = "a7a7e129-2276-4919-9126-ee13aefdf416"
type = "breaking change"
description = "remove `Type.args` field and instead make it a property"
author = "@NiklasRosenstein"

[[entries]]
id = "18faef5d-d844-475d-8df3-4b4c128a6538"
type = "breaking change"
description = "Added `Type.info` property"
author = "@NiklasRosenstein"

[[entries]]
id = "2b620341-9e9e-41ed-9286-765805bc02aa"
type = "feature"
description = "`deconstruct_type()` now supports concrete types"
author = "@NiklasRosenstein"

[[entries]]
id = "7bfd6ab7-4989-468f-b1a9-b9693fc78093"
type = "feature"
description = "export members from `typeapi.api`, `typeapi.parser` and `typeapi.deconstruct`, most notably `typeapi.of()` is not available as an alias for `typeapi.parser.parse_type_hint()`"
author = "@NiklasRosenstein"

[[entries]]
id = "a6495338-0ca5-4223-ad96-c869642e40ff"
type = "breaking change"
description = "remove `Hint.source`"
author = "@NiklasRosenstein"

[[entries]]
id = "d60b9457-2427-4c66-87bf-ce63285a452a"
type = "breaking change"
description = "remove `typeapi.deconstruct` module, make `typeapi.model.Type` have the fields that `TypeInfo` used to have and move `deconstruct_type()` to `Type.of()`"
author = "@NiklasRosenstein"
